diff -Nuar kernel/kernel-5.10/drivers/media/v4l2-core/v4l2-ioctl.c kernel_new/kernel-5.10/drivers/media/v4l2-core/v4l2-ioctl.c
--- kernel/kernel-5.10/drivers/media/v4l2-core/v4l2-ioctl.c	2022-08-10 20:15:30.000000000 -0700
+++ kernel_new/kernel-5.10/drivers/media/v4l2-core/v4l2-ioctl.c	2022-08-30 22:29:11.598199548 -0700
@@ -1411,6 +1411,12 @@
 	case V4L2_PIX_FMT_TM6000:	descr = "A/V + VBI Mux Packet"; break;
 	case V4L2_PIX_FMT_CIT_YYVYUY:	descr = "GSPCA CIT YYVYUY"; break;
 	case V4L2_PIX_FMT_KONICA420:	descr = "GSPCA KONICA420"; break;
+    //xumm add
+    case V4L2_PIX_FMT_TX2_Y10:	descr = "TX2 10-bit/16-bit Greyscale"; break;
+	case V4L2_PIX_FMT_TX2_Y12:	descr = "TX2 12-bit/16-bit Greyscale"; break;
+	case V4L2_PIX_FMT_XAVIER_Y10:	descr = "XAVIER 10-bit/16-bit Greyscale"; break;
+	case V4L2_PIX_FMT_XAVIER_Y12:	descr = "XAVIER 12-bit/16-bit Greyscale"; break;
+    //end
 	case V4L2_PIX_FMT_HSV24:	descr = "24-bit HSV 8-8-8"; break;
 	case V4L2_PIX_FMT_HSV32:	descr = "32-bit XHSV 8-8-8-8"; break;
 	case V4L2_SDR_FMT_CU8:		descr = "Complex U8"; break;
diff -Nuar kernel/kernel-5.10/include/uapi/linux/videodev2.h kernel_new/kernel-5.10/include/uapi/linux/videodev2.h
--- kernel/kernel-5.10/include/uapi/linux/videodev2.h	2022-08-10 20:15:33.000000000 -0700
+++ kernel_new/kernel-5.10/include/uapi/linux/videodev2.h	2022-08-30 22:30:12.525025491 -0700
@@ -760,6 +760,15 @@
 #define V4L2_PIX_FMT_IPU3_SGRBG10	v4l2_fourcc('i', 'p', '3', 'G') /* IPU3 packed 10-bit GRBG bayer */
 #define V4L2_PIX_FMT_IPU3_SRGGB10	v4l2_fourcc('i', 'p', '3', 'r') /* IPU3 packed 10-bit RGGB bayer */
 
+//xumm add
+/* TX2 */
+#define V4L2_PIX_FMT_TX2_Y10     v4l2_fourcc('T', 'Y', '1', '0') /* 10  Greyscale     */
+#define V4L2_PIX_FMT_TX2_Y12     v4l2_fourcc('T', 'Y', '1', '2') /* 12  Greyscale     */
+
+/* Xavier */
+#define V4L2_PIX_FMT_XAVIER_Y10     v4l2_fourcc('X', 'Y', '1', '0') /* 10  Greyscale     */
+#define V4L2_PIX_FMT_XAVIER_Y12     v4l2_fourcc('X', 'Y', '1', '2') /* 12  Greyscale     */
+//end
 /* SDR formats - used only for Software Defined Radio devices */
 #define V4L2_SDR_FMT_CU8          v4l2_fourcc('C', 'U', '0', '8') /* IQ u8 */
 #define V4L2_SDR_FMT_CU16LE       v4l2_fourcc('C', 'U', '1', '6') /* IQ u16le */
diff -Nuar kernel/nvidia/drivers/media/platform/tegra/camera/camera_common.c kernel_new/nvidia/drivers/media/platform/tegra/camera/camera_common.c
--- kernel/nvidia/drivers/media/platform/tegra/camera/camera_common.c	2022-08-10 20:15:42.000000000 -0700
+++ kernel_new/nvidia/drivers/media/platform/tegra/camera/camera_common.c	2022-08-25 01:29:18.086853700 -0700
@@ -131,6 +131,26 @@
 		V4L2_COLORSPACE_SRGB,
 		V4L2_PIX_FMT_VYUY,
 	},
+	//xumm add
+	// Grayscale 8bit support
+	{
+		MEDIA_BUS_FMT_Y8_1X8,
+		V4L2_COLORSPACE_RAW,
+		V4L2_PIX_FMT_GREY,
+	},
+	// Grayscale 10bit support
+	{
+		MEDIA_BUS_FMT_Y10_1X10,
+		V4L2_COLORSPACE_RAW,
+		V4L2_PIX_FMT_Y10,
+	},
+	// Grayscale 12bit support
+	{
+		MEDIA_BUS_FMT_Y12_1X12,
+		V4L2_COLORSPACE_RAW,
+		V4L2_PIX_FMT_Y12,
+	},
+	//xumm add end
 	/*
 	 * The below two formats are not supported by VI4,
 	 * keep them at the last to ensure they get discarded
diff -Nuar kernel/nvidia/drivers/media/platform/tegra/camera/sensor_common.c kernel_new/nvidia/drivers/media/platform/tegra/camera/sensor_common.c
--- kernel/nvidia/drivers/media/platform/tegra/camera/sensor_common.c	2022-08-10 20:15:42.000000000 -0700
+++ kernel_new/nvidia/drivers/media/platform/tegra/camera/sensor_common.c	2022-08-25 01:29:50.909966800 -0700
@@ -265,6 +265,14 @@
 		*format = V4L2_PIX_FMT_UYVY;
 	else if (strncmp(pixel_t, "yuv_vyuy16", size) == 0)
 		*format = V4L2_PIX_FMT_VYUY;
+    //xumm add
+    else if (strncmp(pixel_t, "raw_y88", size) == 0)
+         *format = V4L2_PIX_FMT_GREY; //Grayscale
+    else if (strncmp(pixel_t, "raw_y1010", size) == 0)
+         *format = V4L2_PIX_FMT_Y10; //
+    else if (strncmp(pixel_t, "raw_y1212", size) == 0)
+         *format = V4L2_PIX_FMT_Y12; //
+    //xum add end
 	else {
 		pr_err("%s: Need to extend format%s\n", __func__, pixel_t);
 		return -EINVAL;
diff -Nuar kernel/nvidia/drivers/media/platform/tegra/camera/vi/channel.c kernel_new/nvidia/drivers/media/platform/tegra/camera/vi/channel.c
--- kernel/nvidia/drivers/media/platform/tegra/camera/vi/channel.c	2022-08-10 20:15:42.000000000 -0700
+++ kernel_new/nvidia/drivers/media/platform/tegra/camera/vi/channel.c	2022-08-29 20:33:05.353129100 -0700
@@ -1306,6 +1306,13 @@
 	case TEGRA_CAMERA_CID_LOW_LATENCY:
 		chan->low_latency = ctrl->val;
 		break;
+//xumm add
+    case TEGRA_CAMERA_CID_VI_TIME_OUT_DISABLE:
+        chan->vi_timeout_disable = ctrl->val;
+        dev_info(&chan->video->dev, "%s: %u set vi timeout disable %d\n",
+			__func__, ctrl->id,ctrl->val);
+        break;
+//add end
 	case TEGRA_CAMERA_CID_VI_PREFERRED_STRIDE:
 		chan->preferred_stride = ctrl->val;
 		tegra_channel_update_format(chan, chan->format.width,
@@ -1479,6 +1486,18 @@
 		.step = 1,
 		.def = 0,
 	},
+	//xumm add
+	{
+		.ops = &channel_ctrl_ops,
+		.id = TEGRA_CAMERA_CID_VI_TIME_OUT_DISABLE,
+		.name = "VI Time Out Disable",
+		.type = V4L2_CTRL_TYPE_BOOLEAN,
+		.def = 0,
+		.min = 0,
+		.max = 1,
+		.step = 1,
+	},
+	//add end
 };
 
 #define GET_TEGRA_CAMERA_CTRL(id, c)					\
diff -Nuar kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi5_fops.c kernel_new/nvidia/drivers/media/platform/tegra/camera/vi/vi5_fops.c
--- kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi5_fops.c	2022-08-10 20:15:42.000000000 -0700
+++ kernel_new/nvidia/drivers/media/platform/tegra/camera/vi/vi5_fops.c	2022-08-25 01:33:13.428220500 -0700
@@ -457,9 +457,19 @@
 			goto rel_buf;
 
 		/* Dequeue a frame and check its capture status */
-		err = vi_capture_status(chan->tegra_vi_channel[vi_port], CAPTURE_TIMEOUT_MS);
-		if (err) {
-			if (err == -ETIMEDOUT) {
+		//xumm add
+		//err = vi_capture_status(chan->tegra_vi_channel[vi_port], CAPTURE_TIMEOUT_MS);
+		do{
+    		err = vi_capture_status(chan->tegra_vi_channel[vi_port], CAPTURE_TIMEOUT_MS);
+    		if (err) {
+                //xumm 
+                if (err == -ETIMEDOUT && chan->vi_timeout_disable) {
+                    dev_err(vi->dev,
+    					"xavier capture time out , will wait\n");
+                    continue;
+                }
+                //end
+    			else if (err == -ETIMEDOUT) {
 				dev_err(vi->dev,
 					"uncorr_err: request timed out after %d ms\n",
 					CAPTURE_TIMEOUT_MS);
@@ -493,7 +503,9 @@
 					gang_prev_frame_id, descr->status.frame_id);
 			goto uncorr_err;
 		}
-
+            //xumm add ,this means get a frame 
+            break;
+	    }while(chan->vi_timeout_disable);
 		spin_lock_irqsave(&chan->capture_state_lock, flags);
 		if (chan->capture_state != CAPTURE_ERROR) {
 			chan->capture_reqs_enqueued -= 1;
@@ -551,7 +563,8 @@
 	struct tegra_channel_buffer *buf;
 	struct tegra_mc_vi *vi = chan->vi;
 	struct v4l2_subdev *csi_subdev;
-
+    
+    dev_err(chan->vi->dev, "vi5_channel_error_recover vi5_capture_dequeue\n");
 	/* stop vi channel */
 	for (vi_port = 0; vi_port < chan->valid_ports; vi_port++) {
 		err = vi_capture_release(chan->tegra_vi_channel[vi_port],
diff -Nuar kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi5_formats.h kernel_new/nvidia/drivers/media/platform/tegra/camera/vi/vi5_formats.h
--- kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi5_formats.h	2022-08-10 20:15:42.000000000 -0700
+++ kernel_new/nvidia/drivers/media/platform/tegra/camera/vi/vi5_formats.h	2022-08-25 01:33:28.398769300 -0700
@@ -141,6 +141,14 @@
 				YUV422_8, YUYV, "YUV 4:2:2 YUYV"),
 	TEGRA_VIDEO_FORMAT(YUV422, 16, YVYU8_2X8, 2, 1, T_Y8_V8__Y8_U8,
 				YUV422_8, YVYU, "YUV 4:2:2 YVYU"),
+    //xumm add
+    TEGRA_VIDEO_FORMAT(RAW8, 8, Y8_1X8, 1, 1, T_R8,
+				RAW8, GREY, "GREY8"),
+    TEGRA_VIDEO_FORMAT(RAW10, 10, Y10_1X10, 2, 1, T_R16,
+				RAW10, XAVIER_Y10, "GREY10"),
+	TEGRA_VIDEO_FORMAT(RAW12, 12, Y12_1X12, 2, 1, T_R16,
+				RAW12, XAVIER_Y12, "GREY12"),
+	//xumm add end
 };
 
 #endif
diff -Nuar kernel/nvidia/include/media/mc_common.h kernel_new/nvidia/include/media/mc_common.h
--- kernel/nvidia/include/media/mc_common.h	2022-08-10 20:15:42.000000000 -0700
+++ kernel_new/nvidia/include/media/mc_common.h	2022-08-30 22:32:11.483085762 -0700
@@ -268,6 +268,10 @@
 	dma_addr_t emb_buf;
 	void *emb_buf_addr;
 	unsigned int emb_buf_size;
+	
+	//xumm add
+    bool vi_timeout_disable;
+    //end
 };
 
 #define to_tegra_channel(vdev) \
diff -Nuar kernel/nvidia/include/media/tegra-v4l2-camera.h kernel_new/nvidia/include/media/tegra-v4l2-camera.h
--- kernel/nvidia/include/media/tegra-v4l2-camera.h	2022-08-10 20:15:42.000000000 -0700
+++ kernel_new/nvidia/include/media/tegra-v4l2-camera.h	2022-08-30 22:32:16.806549003 -0700
@@ -59,6 +59,9 @@
 #define TEGRA_CAMERA_CID_LOW_LATENCY         (TEGRA_CAMERA_CID_BASE+109)
 #define TEGRA_CAMERA_CID_VI_PREFERRED_STRIDE (TEGRA_CAMERA_CID_BASE+110)
 
+//xumm add
+#define TEGRA_CAMERA_CID_VI_TIME_OUT_DISABLE (TEGRA_CAMERA_CID_BASE+120)
+
 /**
  * This is temporary with the current v4l2 infrastructure
  * currently discussing with upstream maintainers our proposals and
